buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'


task npmInstall(type:Exec) {
    commandLine = [System.properties['os.name'].toLowerCase().contains('windows') ? 'npm.cmd' : 'npm', 'install']
}

task ngBuild(type:Exec) {
    commandLine = [System.properties['os.name'].toLowerCase().contains('windows') ? 'ng.cmd' : 'ng', 'build']
}

ngBuild.dependsOn npmInstall

war.dependsOn ngBuild

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

springBoot {
    backupSource = false
}

bootRepackage {
    mainClass = 'hello.SpringBootWebApplication'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-web") 
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    providedRuntime group: 'javax.servlet', name: 'javax.servlet-api'
    testCompile("junit:junit")
}